#!/usr/bin/env python3
import sys


def solve(n: int, a: "List[int]", b: "List[int]"):
    color = 10 ** 6 + 1 + 1
    votes = [0] * color
    for aa, bb in zip(a, b):
        votes[aa] += 1
        votes[bb + 1] -= 1
    
    for i in range(1, color):
        votes[i] += votes[i - 1]
    
    print(max(votes))
    return


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    n = int(next(tokens))  # type: int
    a = [int()] * (n)  # type: "List[int]"
    b = [int()] * (n)  # type: "List[int]"
    for i in range(n):
        a[i] = int(next(tokens))
        b[i] = int(next(tokens))
    solve(n, a, b)

if __name__ == '__main__':
    main()
