#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(L: int):
    L = str(L)
    dp = [[0] * 2 for _ in range(len(L) + 1)]
    dp[0][0] = 1
    for i in range(len(L)):
        if L[i] == "0":
            # まだ決まってない
            dp[i + 1][0] += dp[i][0] # (0,0)
            dp[i + 1][0] %= MOD
            # すでに小さい
            dp[i + 1][1] += dp[i][1] * 3 # (0,0), (1,0), (0,1)
            dp[i + 1][1] %= MOD
        else:
            # まだ決まってない 1 - 1
            dp[i + 1][0] += dp[i][0] * 2 # (1,0), (0,1)
            dp[i + 1][0] %= MOD
            # まだ決まってない->決まる 1 - 0
            dp[i + 1][1] += dp[i][0] # (0,0)
            # すでに小さい 01 OK
            dp[i + 1][1] += dp[i][1] * 3 # (0,0), (1,0), (0,1)
            dp[i + 1][1] %= MOD
    print((dp[-1][0] + dp[-1][1]) % MOD)


    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    L = int(next(tokens))  # type: int
    solve(L)

if __name__ == '__main__':
    main()
