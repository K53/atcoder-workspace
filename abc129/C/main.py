#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, M: int, a: "List[int]"):
    s = set(a)
    dp = [0] * (N + 3)
    dp[0] = 1
    for i in range(N):
        if i + 1 not in s:
            dp[i + 1] += dp[i]
            dp[i + 1] %= MOD
        if i + 2 not in s:
            dp[i + 2] += dp[i]
            dp[i + 2] %= MOD
    print(dp[N] % MOD)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    solve(N, M, a)

if __name__ == '__main__':
    main()
