#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, M: int, a: "List[int]"):
    stairs = sorted(list(set(i for i in range(N + 1)) ^ set(a)))
    dp = [0] * (N + 1)
    for i in stairs:
        if i == 0 or i == 1:
            dp[i] = 1
        else:
            dp[i] = (dp[i - 2] + dp[i - 1]) % MOD
        
    print(dp[-1])
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    solve(N, M, a)

if __name__ == '__main__':
    main()
