#!/usr/bin/env python3
import sys
import copy

def getScore(l):
    res = 0
    score = [0] * 10
    for num in l:
        score[num - 1] += 1
    for s in range(10):
        res += (s + 1) * 10 ** score[s]
    return res

def solve(K: int, S: str, T: str):
    nums = [0] + [K] * 9
    s = (list(map(int, list(S[:-1]))))
    t = (list(map(int, list(T[:-1]))))
    cards = [0] + [K] * 9
    for n in s + t:
        cards[n] -= 1
    
    ans = 0
    for i in range(1, 10):
        if cards[i] == 0:
            continue
        for j in range(1, 10):
            if cards[j] == 0 or (i == j and cards[i] == 1):
                continue
            ss = copy.copy(s) + [i]
            tt = copy.copy(t) + [j]
            if getScore(ss) > getScore(tt):
                ans += (cards[i] * cards[j]) if i != j else (cards[i] * (cards[i] - 1))
    print(ans / ((K * 9 - 8) * (K * 9 - 9)))


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    K = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    T = next(tokens)  # type: str
    solve(K, S, T)

if __name__ == '__main__':
    main()
