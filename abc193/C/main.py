#!/usr/bin/env python3
import sys
import math

# def aa(N: int):
#     s = set()
#     for a in range(2, N):
#         if a * a > N:
#             break
#         for b in range(2, 34):
#             t = a ** b
#             if t <= N:
#                 s.add(t)
#     return s

def solve(N: int):
    ss = set()
    # N = 100
    ans = 0
    q = 0
    for i in range(2, N):
        if i * i > N:
            break
        skip = False
        for e in range(2, 34):
            a = math.log(i, e)
            if a.is_integer() and a > 1:
                skip = True
                break
        if skip:
            continue
        # print(i)
        m = math.log(N, i) - 1
        for k in range(int(m//1)):
            ss.add(i ** (k + 2))
        # print(m)
        # print("#")
        ans += int(m // 1)
    # sa = aa(N)
    # print(len(ss))
    # print(len(sa))
    # print(q)
    # print(sa.difference(ss))
    print(N - len(ss))
    return




# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
