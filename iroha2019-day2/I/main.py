#!/usr/bin/env python3
import sys


def solve(H: int, W: int, X: int, s_x: int, s_y: int, g_x: int, g_y: int, A: "List[List[int]]", C: "List[int]"):
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    X = int(next(tokens))  # type: int
    s_x = int(next(tokens))  # type: int
    s_y = int(next(tokens))  # type: int
    g_x = int(next(tokens))  # type: int
    g_y = int(next(tokens))  # type: int
    A = [[int(next(tokens)) for _ in range(W)] for _ in range(H)]  # type: "List[List[int]]"
    C = [int(next(tokens)) for _ in range(X)]  # type: "List[int]"
    solve(H, W, X, s_x, s_y, g_x, g_y, A, C)

if __name__ == '__main__':
    main()
