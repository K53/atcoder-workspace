#!/usr/bin/env python3
import sys


def solve(S: str, K: int):
    # リストa (要素数N)
    N = len(S)

    # a[l:r]を考える。rはこの範囲に含まれない。
    # 例) a[0:3] → a[0]〜a[2]までの範囲
    l = 0
    r = 0
    ans = 0
    cnt = 0
    rest = K
    f = True
    for _ in range(N):
        while r < N and f: #rest >= 0:
            # print("#", l, r, rest)
            if S[r] == "X":
                cnt += 1
                r += 1
                continue
            if rest == 0:
                ans = max(ans, cnt)
                # print(l, r)
                f = False
            else:
                rest -= 1
                cnt += 1
                r += 1
        if not f:
            # print(" ", l, r)
            if S[l] == "X":
                cnt -= 1
                l += 1
            else:
                cnt -= 1
                rest += 1
                l += 1
                f = True
    ans = max(ans, cnt)
    print(ans)
    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    K = int(next(tokens))  # type: int
    solve(S, K)

if __name__ == '__main__':
    main()
