#!/usr/bin/env python3
import sys
import bisect

def solve(N: int, L: "List[int]"):
    L.sort()
    ans = 0
    for a in range(N):
        for b in range(a + 1, N):
            # b - a < c < b + a
            ll = bisect.bisect_right(L[(b + 1):], L[b] - L[a])
            rr = bisect.bisect_left(L[(b + 1):], L[a] + L[b])
            if rr >= ll:
                ans += (rr - ll)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    L = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, L)

if __name__ == '__main__':
    main()
