#!/usr/bin/env python3


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    # H, W = map(int, input().split())
    H, W = 500, 500
    # edges = []
    # for _ in range(H):
    #     edges.append(input())
    edges = ["." * 500 for _ in range(500)]
    
    c = []
    from collections import deque
    def bfs() -> list:
        INF = 10 ** 16
        q = deque()
        dist = [[INF] * W for _ in range(H)]
        q.append((0, 0))
        dist[0][0] = 0
        while q:
            nowy, nowx = q.popleft()
            for dx, dy in [(0, 1), (1, 0), (-1, 0), (0, -1)]:
                nexty = nowy + dy
                nextx = nowx + dx
                if nexty < 0 or nextx < 0 or nexty >= H or nextx >= W:
                    continue
                if edges[nexty][nextx] == "#":
                    c.append((nexty, nextx))
                    continue
                if dist[nexty][nextx] != INF:
                    continue
                q.append((nexty, nextx))
                dist[nexty][nextx] = dist[nowy][nowx] + 1
        return dist
    bfs()
    print(c)
    return

if __name__ == '__main__':
    main()
