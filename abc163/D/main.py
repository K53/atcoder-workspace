#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, K: int):
    l = [i for i in range(N + 1)]
    from itertools import accumulate
    acc = list(accumulate(l))
    iacc = list(accumulate(l[::-1]))
    ans = 0
    for i in range(K, N + 1 + 1):
        ans += iacc[i - 1] - acc[i - 1] + 1
    print(ans % MOD)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
