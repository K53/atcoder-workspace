#!/usr/bin/env python3
import sys


def solve(N: int, K: int, p: "List[int]"):
    l = [(1 + pp) / 2 for pp in p]
    s = sum(l[:K])
    ans = s
    for i in range(N - K):
        s -= l[i]
        s += l[K + i]
        ans = max(ans, s)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, p)

if __name__ == '__main__':
    main()
