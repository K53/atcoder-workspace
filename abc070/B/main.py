#!/usr/bin/env python3
import sys


def solve(A: int, B: int, C: int, D: int):
    maxST = 100 + 3
    imos = [0] * (maxST + 1)
    imos[A] += 1
    imos[B + 1] -= 1
    imos[C] += 1
    imos[D + 1] -= 1
    # ビルド
    for i in range(1, len(imos)):
        imos[i] += imos[i - 1]
    print(max(imos.count(2) - 1, 0))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(A, B, C, D)

if __name__ == '__main__':
    main()
