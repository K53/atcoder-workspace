#!/usr/bin/env python3
import sys
import bisect

def solve(H: int, M: int):
    mis = []
    d = {}
    for hh in range(24):
        for mm in range(60):
            ii, jj = str(hh).zfill(2), str(mm).zfill(2)
            newhh = ii[0] + jj[0]
            newmm = ii[1] + jj[1]
            if 0 <= int(newhh) <= 23 and 0 <= int(newmm) <= 59:
                mis.append(hh*60 + mm)
                d[hh*60 + mm] = (hh, mm)
    # print(mis)
    idx = bisect.bisect_left(mis, H * 60 + M)
    # print(idx)
    mis = mis * 2
    print(*d[mis[idx]])
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    solve(H, M)

if __name__ == '__main__':
    main()
