#!/usr/bin/env python3
import sys


def solve(N: int):
    mul = [0] * (2 * 10 ** 5 + 1)
    for k in range(1, 2 * 10 ** 5 + 1):
        # a * b = k
        for one in range(1, int(k ** 0.5) + 1):
            other, q = divmod(k, one)
            if q == 0:
                if one == other:
                    mul[k] += 1
                else:
                    mul[k] += 2
    ans = 0
    for i in range(N):
        ans += mul[i] * mul[N - i]
    print(ans)




    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
