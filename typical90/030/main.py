#!/usr/bin/env python3
import sys


def solve(N: int, K: int):
    def getNumOfPrime(limit: int):
        numOfPrime = [0] * (limit + 1)
        numOfPrime[0] = 0
        numOfPrime[1] = 0
        for p in range(2, limit + 1):
            if not numOfPrime[p]:
                for i in range(p, limit + 1, p):
                    numOfPrime[i] += 1
        return numOfPrime
    ans = 0
    for i in getNumOfPrime(N):
        if i >= K:
            ans += 1
    print(ans)
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
