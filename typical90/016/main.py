#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int, C: int):
    ans = 9999
    for aa in range(9999):
        for bb in range(9999):
            if aa + bb > 9999:
                break
            rest = N - A * aa - B * bb
            if rest < 0:
                break
            cc = rest // C
            q = rest % C
            all = aa + bb + cc
            if all <= 9999 and q == 0:
                ans = min(ans, all)
    print(ans)
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    solve(N, A, B, C)

if __name__ == '__main__':
    main()
