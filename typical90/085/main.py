#!/usr/bin/env python3
import sys


def solve(K: int):
    def primeFactrization(n: int) -> dict:
        primeFactors = dict()
        i = 2
        while i * i <= n:
            ex = 0
            while n % i == 0:
                ex += 1
                n //= i
            if ex != 0:
                primeFactors[i] = ex
            i += 1
        if n != 1:
            primeFactors[n] = 1
        return primeFactors
    s = 0
    for v in primeFactrization(K).values():
        s += v
    print(s)
    
    
    return


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    K = int(next(tokens))  # type: int
    solve(K)

if __name__ == '__main__':
    main()
