#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, L: int):
    dp = [0] * (N + 1)
    dp[0] = 1
    for i in range(N):
        if i + 1 <= N:
            dp[i + 1] = (dp[i + 1] + dp[i]) % MOD
        if i + L <= N:
            dp[i + L] = (dp[i + L] + dp[i]) % MOD
    print(dp[N])
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    L = int(next(tokens))  # type: int
    solve(N, L)

if __name__ == '__main__':
    main()
