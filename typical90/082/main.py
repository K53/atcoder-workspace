#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int




def calc(N: int):
    ans = 0
    for i in range(1, 20):
        if N >= 10 ** i - 1:
            ans += (((10 ** i - 1) - 10 ** (i - 1) + 1) * ((10 ** i - 1) + 10 ** (i - 1))  * i // 2) % MOD
        else:
            ans += ((N - 10 ** (i - 1) + 1) * (N + 10 ** (i - 1))  * i // 2) % MOD
            return ans % MOD

def solve(L: int, R: int):
    print((calc(R) - calc(L - 1)) % MOD)
    return


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    L = int(next(tokens))  # type: int
    R = int(next(tokens))  # type: int
    solve(L, R)

if __name__ == '__main__':
    main()
