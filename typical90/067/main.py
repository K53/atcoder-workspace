#!/usr/bin/env python3
import sys

def base10int(base10value, toBase):
    ans = []
    p = base10value
    while p >= toBase:
        p, q = divmod(p, toBase)
        ans.append(str(q))
    ans.append(str(p))
    return "".join(ans[::-1])

def solve(N: int, K: int):
    ans = str(N)
    for _ in range(K):
        before = base10int(int(ans, 8), 9)
        # print(before)
        after = []
        for aa in before:
            after.append(aa if aa != "8" else "5")
        # print(after)
        ans = "".join(after)
    print(ans)
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
