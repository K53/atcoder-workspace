#!/usr/bin/env python3
import sys

def solve(H: int, W: int, A: "List[List[int]]"):
    xsum = []
    for ww in range(W):
        s = 0
        for hh in range(H):
            s += A[hh][ww]
        xsum.append(s)
    ysum = []
    for hh in range(H):
        s = 0
        for ww in range(W):
            s += A[hh][ww]
        ysum.append(s)
    for hh in range(H):
        ans = []
        for ww in range(W):
            ans.append(xsum[ww] + ysum[hh] - A[hh][ww])
        print(*ans, sep=" ")
    return

# Generated by 2.2.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    A = [[int(next(tokens)) for _ in range(W)] for _ in range(H)]  # type: "List[List[int]]"
    solve(H, W, A)

if __name__ == '__main__':
    main()
