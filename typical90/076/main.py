#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, A: "List[int]"):
    all = sum(A)
    if all % 10 != 0:
        print(NO)
        return
    part = all // 10
    r = 0
    l = 0
    ans = 0
    ss = 0
    AA = A + A
    for _ in range(N * 2):
        # print(AA[l:r], l, r)
        # print(ss)
        if ss == part and (r - l) <= N:
            print(YES)
            return
        while r < N * 2 and ss < part:
            ss += AA[r]
            r += 1
        # print(AA[l:r], l, r)
        # print(ss)
        if ss > part:
            ans += N - r + 1
            ss -= AA[l]
            l += 1
    if ss == part and (r - l) <= N:
        print(YES)
    else:
        print(NO)
    return


# Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
