#!/usr/bin/env python3
import sys


def solve(S: int):
    S = str(S)
    invS = S[::-1]
    num = [0] * 2019
    now = 0
    d = 1
    for i in range(len(S)):
        now = (int(invS[i]) * d + now) % 2019
        num[now] += 1
        d = d * 10 % 2019
    ans = num[0]
    for nn in num:
        ans += nn * (nn - 1) // 2
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = int(next(tokens))  # type: int
    solve(S)

if __name__ == '__main__':
    main()
