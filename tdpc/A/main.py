#!/usr/bin/env python3
import sys

# dp[k][v] = 問kまでで得点をvにできるかどうか
def solve(N: int, p: "List[int]"):
    m = 10001
    dp = [[False] * m for _ in range(N + 1)]
    dp[0][0] = True

    for k in range(1, N + 1):
        for v in range(m):
            if dp[k - 1][v]:
                dp[k][v] = True
                dp[k][v + p[k - 1]] = True
    ans = 0
    ans += dp[-1].count(True)            
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, p)

if __name__ == '__main__':
    main()
