#!/usr/bin/env python3
import sys

# dp[{得点をvにする時}] = {何通りあるか}
def solve(N: int, p: "List[int]"):
    dp = [0] * (N * max(p) + 1)
    for i in p:
        dp[i] = 1
    
    for i in range(N * max(p) + 1):
        for j in p:
            if i - j < 0:
                continue
            dp[i] = max(dp[i], dp[i - j] + 1)
    print(dp)
    print(dp[N])
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, p)

if __name__ == '__main__':
    main()
