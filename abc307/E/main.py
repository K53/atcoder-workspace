#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, M: int):
    dp = [[0, 0] for _ in range(N)]
    dp[0][0] = 1
    for i in range(N - 1):
        # 0 -> 0はない
        # 0 -> other
        dp[i + 1][1] += dp[i][0] * (M - 1)
        dp[i + 1][1] %= MOD
        # other -> 0
        dp[i + 1][0] += dp[i][1]
        dp[i + 1][0] %= MOD
        # other -> other
        dp[i + 1][1] += dp[i][1] * (M - 2)
        dp[i + 1][1] %= MOD
    print(dp[-1][1] * M % MOD)


    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    solve(N, M)

if __name__ == '__main__':
    main()
