#!/usr/bin/env python3
from collections import Counter
# from itertools import groupby
# def runLengthEncode(S: str) -> "List[tuple(str, int)]":
#     grouped = groupby(S)
#     res = []
#     for k, v in grouped:
#         res.append((k, int(len(list(v)))))
#     return res
# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    H, W = map(int, input().split())
    G = []
    for _ in range(H):
        G.append(input())
    
    hh = [0] * H
    ww = [0] * W
    for i in range(H):
        for j in range(W):
            if G[i][j] == "#":
                hh[i] += 1
                ww[j] += 1
    ch = Counter(hh)
    cw = Counter(ww)
    # print(ch, cw)
    ans1 = 0
    mink = 1000
    for k, v in ch.items():
        if v == 1 and k != 0 and k < mink:
            ans1 = hh.index(k) + 1
            mink = k
    
    ans2 = 0
    mink = 1000
    for k, v in cw.items():
        if v == 1 and k != 0 and k < mink:
            ans2 = ww.index(k) + 1
            mink = k
    print(ans1, ans2)




    #     com = runLengthEncode(G[i])
    #     if len(com) == 1 and com[0][0] == ".":
    #         continue
    #     l.append(com)
    # print(l)

if __name__ == '__main__':
    main()
