#!/usr/bin/env python3
import sys


def solve(K: int):
    def f(a):
        return sum([int(i) for i in str(a)]) 

    l = [[] for _ in range(20)]
    a = [[] for _ in range(20)]
    for i in range(1, 150 + 1):
        print(i, "/", f(i), int((i / f(i)) * 100) / 100)
        l[f(i)].append(str(i).zfill(5))
        a[f(i)].append(str(int((i / f(i)) * 100) / 100).zfill(5))
    
    for i in range(20):
        print(l[i])
        print(a[i])
        print("----")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    K = int(next(tokens))  # type: int
    solve(K)

if __name__ == '__main__':
    main()
