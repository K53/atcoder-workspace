#!/usr/bin/env python3
import sys
from itertools import accumulate

def solve(N: int, K: int, V: "List[int]"):
    # l = accumulate(V)
    # r = accumulate(V[::-1])
    ans = 0
    for h in range(K + 1):
        for i in range(K + 1):
            if h + i > N:
                break
            for j in range(K + 1):
                if h + i + j > K or h + i <= j:
                    break
                # print(h, i, j)
                l = sorted(V[:h] + V[(N - i):])
                # print((l[j:]), sum(l[j:]))
                ans = max(ans, sum(l[j:]))
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    V = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, V)

if __name__ == '__main__':
    main()
