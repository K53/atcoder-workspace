#!/usr/bin/env python3
import sys


def solve(S: "List[str]"):
    ans = set()
    for x0 in range(9):
        for y0 in range(9):
            for xx in range(9):
                for yy in range(9):
                    # x0 = 4
                    # y0 = 8
                    # xx = 5
                    # yy = 6
                    if x0 == xx and y0 == yy:
                        continue
                    cx = (xx - x0) * 0 + (yy - y0) * -1 + x0
                    cy = (xx - x0) * 1 + (yy - y0) * 0 + y0
                    dx = (x0 - cx) * 0 + (y0 - cy) * -1 + cx
                    dy = (x0 - cx) * 1 + (y0 - cy) * 0 + cy
                    if not (cx < 0 or cy < 0 or dx < 0 or dy < 0 or cx >= 9 or cy >= 9 or dx >= 9 or dy >= 9):
                        if S[x0][y0] == "#" and \
                            S[xx][yy] == "#" and \
                            S[cx][cy] == "#" and \
                            S[dx][dy] == "#":
                            l = sorted([(x0, y0), (xx, yy), (cx, cy), (dx, dy)])
                            ans.add((l[0][0], l[0][1],
                            l[1][0], l[1][1],
                            l[2][0], l[2][1],
                            l[3][0], l[3][1]))
                    cx = (xx - x0) * 0 + (yy - y0) * 1 + x0
                    cy = (xx - x0) * -1 + (yy - y0) * 0 + y0
                    dx = (x0 - cx) * 0 + (y0 - cy) * 1 + cx
                    dy = (x0 - cx) * -1 + (y0 - cy) * 0 + cy
                    if not (cx < 0 or cy < 0 or dx < 0 or dy < 0 or cx >= 9 or cy >= 9 or dx >= 9 or dy >= 9):
                        if S[x0][y0] == "#" and \
                            S[xx][yy] == "#" and \
                            S[cx][cy] == "#" and \
                            S[dx][dy] == "#":
                            l = sorted([(x0, y0), (xx, yy), (cx, cy), (dx, dy)])
                            ans.add((l[0][0], l[0][1],
                            l[1][0], l[1][1],
                            l[2][0], l[2][1],
                            l[3][0], l[3][1]))
    print(len(ans))

                    





    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = [next(tokens) for _ in range(9)]  # type: "List[str]"
    solve(S)

if __name__ == '__main__':
    main()
