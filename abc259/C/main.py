#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str

from itertools import groupby
def runLengthEncode(S: str) -> "List[tuple(str, int)]":
    grouped = groupby(S)
    res = []
    for k, v in grouped:
        res.append((k, int(len(list(v)))))
    return res

def solve(S: str, T: str):
    ss = runLengthEncode(S)
    tt = runLengthEncode(T)
    if len(ss) != len(tt):
        print(NO)
        return
    for sss, ttt in zip(ss, tt):
        sx, sc = sss
        tx, tc = ttt
        if sx != tx:
            print(NO)
            return
        
        if sc == tc:
            continue

        if sc == 1 or tc == 1:
            print(NO)
            return
        
        if sc > tc:
            print(NO)
            return
    print(YES)


        
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    T = next(tokens)  # type: str
    solve(S, T)

if __name__ == '__main__':
    main()
