#!/usr/bin/env python3
import sys
from itertools import groupby

def runLengthEncode(S: str) -> "List[tuple(str, int)]":
    grouped = groupby(S)
    res = []
    for k, v in grouped:
        res.append((k, int(len(list(v)))))
    return res

def solve(S: str):
    ss = runLengthEncode(S)
    res = [0] * len(S)
    l, r = -1, 0
    for direction, num in ss:
        if direction == "R":
            l += num
            r += num
            res[l] += num // 2 + num % 2
            res[r] += num // 2
        else:
            res[l] += num // 2
            res[r] += num // 2 + num % 2
            l += num
            r += num
    print(*res, sep=" ")
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
