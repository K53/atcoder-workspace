#!/usr/bin/env python3
import sys


def solve(H: int, W: int, N: int, T: str, S: "List[str]"):
    ans = 0
    for sh in range(H):
        for sw in range(W):
            hh, ww = sh, sw
            if S[hh][ww] == "#":
                continue
            for i in range(N):
                if T[i] == "L":
                    ww -= 1
                if T[i] == "R":
                    ww += 1
                if T[i] == "U":
                    hh -= 1
                if T[i] == "D":
                    hh += 1
                if S[hh][ww] == "#":
                    break
            else:
                ans += 1
    print(ans)
    return


# Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    T = next(tokens)  # type: str
    S = [next(tokens) for _ in range(H)]  # type: "List[str]"
    solve(H, W, N, T, S)

if __name__ == '__main__':
    main()
