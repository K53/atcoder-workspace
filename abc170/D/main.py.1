#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    maxA = max(A)
    nums = [0] * (maxA + 1)
    for aa in A:
        nums[aa] += 1
    for nn in range(maxA + 1):
        if nums[nn] == 0:
            continue 
        for i in range(2, maxA + 1):
            if nn * i > maxA:
                break
            nums[nn * i] = 0
    print(nums.count(1))
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
