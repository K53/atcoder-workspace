#!/usr/bin/env python3
import sys
import math

def mat_mul(a, b, mod):
    """
    行列乗算 a * b
    eg.)
    a : [
        [1, 1],
        [1, 0],
        [0, 1],
    ] 
    b : [
        [1, 1, 0, 1],
        [1, 0, 0, 1],
    ] 
    ※ a_cols == b_rows であること!
    """
    a_rows, a_cols, b_cols = len(a), len(a[0]), len(b[0])
    res = [[0] * b_cols for _ in range(a_rows)]
    for i in range(a_rows):
        for j in range(b_cols):
            for k in range(a_cols):
                res[i][j] += a[i][k] * b[k][j]
                res[i][j] %= mod
    return res

def mat_pow(x, n, mod):
    """
    行列乗算 x ^ n
    eg.)
    x : [
        [1, 1],
        [1, 0],
    ] 
    ※ x_cols == x_rows であること!
    """
    res = [[0] * len(x) for _ in range(len(x))]
    for i in range(len(x)):
        res[i][i] = 1

    while n > 0:
        if n & 1:
            res = mat_mul(x, res, mod)
        x = mat_mul(x, x, mod)
        n //= 2
    return res
    

def solve(A: int, X: int, M: int):
    # ---------- 行列解
    # an+1 = A * an + 1
    # 1    = 0      + 1
    # と書けるので、
    # [
    #   [A, 1],
    #   [0, 1],
    # ]
    # ----------
    # a1 = [
    #     [0],
    #     [1]
    # ]
    # mat = [
    #     [A, 1],
    #     [0, 1],
    # ] 
    # print(mat_mul(mat_pow(mat, X, M), a1, M)[0][0])

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    X = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    solve(A, X, M)

if __name__ == '__main__':
    main()
