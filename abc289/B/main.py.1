#!/usr/bin/env python3
import sys


def solve(N: int, M: int, a: "List[int]"):
    ans = []
    tmp = []
    for i in range(1, N + 1):
        if i in a:
            tmp.append(i)
        else:
            tmp.append(i)
            if len(tmp) != 0:
                for tt in tmp[::-1]:
                    ans.append(tt)
                tmp = []
            else:
                ans.append(i)
    for tt in tmp[::-1]:
        ans.append(tt)
    print(*ans, sep=" ")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    solve(N, M, a)

if __name__ == '__main__':
    main()
