#!/usr/bin/env python3
import sys
INF = 10 ** 16

def solve(R: int, C: int, K: int, r: "List[int]", c: "List[int]", v: "List[int]"):
    f = [[0 for _ in range(C)] for _ in range(R)]
    for rr, cc, vv in zip(r, c, v):
        f[rr - 1][cc - 1] = vv
    
    dp = [[[-INF for _ in range(C)] for _ in range(R)] for _ in range(4)]
    dp[0][0][0] = 0
    for rr in range(R):
        for cc in range(C):
            for k in range(4):
                if dp[k][rr][cc] == -INF:
                    continue
                # ひろう
                if k + 1 < 4 and cc + 1 < C:
                    dp[k + 1][rr][cc + 1] = max(dp[k + 1][rr][cc + 1], dp[k][rr][cc] + f[rr][cc])
                if k + 1 < 4 and rr + 1 < R:
                    dp[0][rr + 1][cc] = max(dp[0][rr + 1][cc], dp[k][rr][cc] + f[rr][cc])
                # ひろわない
                if cc + 1 < C:
                    dp[k][rr][cc + 1] = max(dp[k][rr][cc + 1], dp[k][rr][cc])
                if rr + 1 < R:
                    dp[0][rr + 1][cc] = max(dp[0][rr + 1][cc], dp[k][rr][cc])

    #  3  1  4  2 --
    # -- -- -- 20 --

    # 28 20 10 -- 12
    # -- -- 15 26 12
    # -- 27 -- -- 10
    # -- -- -- -- 21
    l = max([dp[0][-1][-1], dp[1][-1][-1], dp[2][-1][-1]])
    print(max(l + f[rr][cc], dp[3][-1][-1]))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    R = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    r = [int()] * (K)  # type: "List[int]"
    c = [int()] * (K)  # type: "List[int]"
    v = [int()] * (K)  # type: "List[int]"
    for i in range(K):
        r[i] = int(next(tokens))
        c[i] = int(next(tokens))
        v[i] = int(next(tokens))
    solve(R, C, K, r, c, v)

if __name__ == '__main__':
    main()
