#!/usr/bin/env python3
import sys

def solve(X: int, K: int, D: int):
    if X == 0:
        if K % 2 == 0:
            print(0)
        else:
            print(D)
        return

    X = abs(X)
    p = X // D
    q = X % D

    if p > K:
        print(X - D * K)
    else:
        if (K - p) % 2 == 0:
            print(q)
        else:
            print(D - q)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(X, K, D)

if __name__ == '__main__':
    main()
