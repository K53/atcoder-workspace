#!/usr/bin/env python3
import sys
import collections 

def solve(N: int, s: "List[str]"):
    q = collections.defaultdict(int)
    for t in s:
        nt = ""
        for tt in sorted(t):
            nt += tt
        q[nt] += 1
    ans = 0
    for i in q.values():
        if i < 2:
            continue
        ans += i * (i - 1) // 2
    print(ans)
            
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    s = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, s)

if __name__ == '__main__':
    main()
