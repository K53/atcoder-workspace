#!/usr/bin/env python3
import sys
from collections import defaultdict

def solve(N: int, s: "List[str]"):
    d = defaultdict(int)
    for i in range(N):
        d[str(sorted(s[i]))] += 1
    ans = 0
    # print(d)
    for k, v in d.items():
        ans += v * (v - 1) // 2
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    s = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, s)

if __name__ == '__main__':
    main()
