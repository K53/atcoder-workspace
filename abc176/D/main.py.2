#!/usr/bin/env python3
from collections import deque

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    H, W = map(int, input().split())
    Ch, Cw = map(int, input().split())
    Dh, Dw = map(int, input().split())
    G = [input() for _ in range(H)]
    INF = 10 ** 16
    def bfs(startY, startX) -> list:
        # ゴールやスタートを任意に設定できる問題では開始点が壁であるケースに注意!!!!
        q = deque()
        use = [[INF] * W for _ in range(H)]
        q.append((startY, startX))
        use[startY][startX] = 0
        while q:
            nowy, nowx = q.popleft()
            for dx in range(-2, 2 + 1):
                for dy in range(-2, 2 + 1):
                    if (dx, dy) == (0, 0): 
                        continue
                    nexty = nowy + dy
                    nextx = nowx + dx
                    if nexty < 0 or nextx < 0 or nexty >= H or nextx >= W or G[nexty][nextx] == "#":
                        continue
                    if (dx, dy) in [(0, 1), (1, 0), (-1, 0), (0, -1)]:
                        if use[nexty][nextx] > use[nowy][nowx]:
                            use[nexty][nextx] = use[nowy][nowx]
                            q.appendleft((nexty, nextx))
                    else:
                        if use[nexty][nextx] > use[nowy][nowx] + 1:
                            use[nexty][nextx] = use[nowy][nowx] + 1
                            q.append((nexty, nextx))
        return use
    
    u = bfs(Ch - 1, Cw - 1)
    print(-1 if u[Dh - 1][Dw - 1] == INF else u[Dh - 1][Dw - 1])
    return

if __name__ == '__main__':
    main()
