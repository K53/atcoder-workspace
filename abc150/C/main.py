#!/usr/bin/env python3
import sys
from itertools import permutations

def solve(N: int, P: "List[int]", Q: "List[int]"):
    num = 0
    a = 0
    b = 0
    for order in permutations([i + 1 for i in range(N)]):
        num += 1
        if list(order) == P:
            a = num
        if list(order) == Q:
            b = num
    print(abs(a - b))
         




    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    Q = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, P, Q)

if __name__ == '__main__':
    main()
