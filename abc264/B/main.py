#!/usr/bin/env python3
import sys


def solve(R: int, C: int):
    g = ["b" * 15,
        "b" + "w" * 13 + "b",
        "bw" + "b" * 11 + "wb",
        "bwb" + "w" * 9 + "bwb",
        "bwbw" + "b" * 7 + "wbwb",
        "bwbwb" + "w" * 5 + "bwbwb",
        "bwbwbw" + "b" * 3 + "wbwbwb",
        "bwbwbwbwbwbwbwb",
        "bwbwbw" + "b" * 3 + "wbwbwb",
        "bwbwb" + "w" * 5 + "bwbwb",
        "bwbw" + "b" * 7 + "wbwb",
        "bwb" + "w" * 9 + "bwb",
        "bw" + "b" * 11 + "wb",
        "b" + "w" * 13 + "b",
        "b" * 15
        ]
    print("black" if g[R - 1][C - 1] == "b" else "white")
    # l = min(R - 1, C - 1)
    # ll = max(R - 1, C - 1)
    # if l % 2 == 0: # Black
    #     if l <= ll <= 15 - l:
    #         print("black")
    #     else:
    #         print("white")
    # else:
    #     if l <= ll <= 15 - l:
    #         print("white")
    #     else:
    #         print("black")
    # return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    R = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    solve(R, C)

if __name__ == '__main__':
    main()
