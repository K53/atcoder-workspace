#!/usr/bin/env python3
import sys
INF = 10 ** 9

units = sorted([1] + [6 ** i for i in range(1, 7)] + [9 ** i for i in range(1, 6)])
def solve(N: int):
    dp = [i for i in range(N + 1)]
    for i in range(1, N + 1):
        for j in units:
            if i - j < 0:
                break
            dp[i] = min(dp[i], dp[i - j] + 1)
    print(dp[N])
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
