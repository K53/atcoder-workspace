#!/usr/bin/env python3
import sys
sys.setrecursionlimit(10 ** 9)

def solve(N: int, u: "List[int]", v: "List[int]"):
    # 森の連結成分の個数＝頂点の個数－辺の個数
    # 頂点の個数
    c = 0 
    for i in range(1, N + 1):
        c += i * (N - i + 1)
    
    for uu, vv in zip(u, v):
        if uu > vv:
            uu, vv = vv, uu
        c -= uu * (N - vv + 1)
    print(c)
    #          [4]
    #           |
    #  [3] --- [5] - [1]
    #           |
    #          [2] - [6]
    # 1 2 3 4 5 6
    #     L---R

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    u = [int()] * (N - 1)  # type: "List[int]"
    v = [int()] * (N - 1)  # type: "List[int]"
    for i in range(N - 1):
        u[i] = int(next(tokens))
        v[i] = int(next(tokens))
    solve(N, u, v)

if __name__ == '__main__':
    main()
