#!/usr/bin/env python3
import sys
from itertools import accumulate

MOD = 998244353  # type: int


def solve(N: int, A: "List[int]"):
    d = []
    ans = 0
    for i in range(N):
        d.append((A[i], i))
    d.sort()
    dd = []
    for i, v in d:
        dd.append(v)
    dd = list(accumulate(dd))
    for i in range(len(dd)):
        ans += (2 ** (dd[-1] - dd[i] - 1)) % MOD
    print(ans)
    

    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
