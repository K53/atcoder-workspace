#!/usr/bin/env python3
import sys
from collections import defaultdict
def solve(S: str):
    states = [0]
    for i in range(len(S)):
        num = int(S[i])
        states.append(states[-1] ^ (1 << num))
    d = defaultdict(int)
    for st in states:
        d[st] += 1
    ans = 0
    for k, v in d.items():
        ans += v * (v - 1) // 2
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
