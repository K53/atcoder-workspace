#!/usr/bin/env python3
import sys


def solve(N: int, Enemy: "List[int]", Power: "List[int]"):
    ans = 0
    for i in range(N):
        if Enemy[i] >= Power[i]:
            ans += Power[i]
            Enemy[i] -= Power[i]
        else:
            ans += Enemy[i]
            resPower = Power[i] - Enemy[i]
            Enemy[i] = 0
            if Enemy[i + 1] >= resPower:
                ans += resPower
                Enemy[i + 1] -= resPower
            else:
                ans += Enemy[i + 1]
                Enemy[i + 1] = 0
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N + 1)]  # type: "List[int]"
    B = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A, B)

if __name__ == '__main__':
    main()
