#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(S: str):
    dp = [[0] * 13 for _ in range(len(S) + 1)]
    dp[0][0] = 1
    for dig in range(len(S)):
        for q in range(13):
            ss = S[dig] 
            if ss == "?":
                for num in range(10):
                    dp[dig + 1][(q * 10 + num) % 13] += dp[dig][q]
                    dp[dig + 1][(q * 10 + num) % 13] %= MOD
            else:
                dp[dig + 1][(q * 10 + int(ss)) % 13] += dp[dig][q]
                dp[dig + 1][(q * 10 + int(ss)) % 13] %= MOD

    print(dp[-1][5] % MOD)
    # for i in range(len(S) + 1):
    #     print(dp[i])
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
