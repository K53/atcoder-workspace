#!/usr/bin/env python3
from collections import defaultdict, deque
INF = 10 ** 16


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    H, W = map(int, input().split())
    d = defaultdict(list)


    G = []
    for hh in range(H):
        l = input()
        G.append(l)
        for ww in range(W):
            if l[ww] == ".":
                continue
            d[l[ww]].append((hh, ww))
    sy, sx = d["S"][0]
    gy, gx = d["G"][0]
    d["S"] = []
    q = deque()
    dist = [[INF] * W for _ in range(H)]
    dist2 = [INF] * 26  # 拡張したグリッド
    q.append((sy, sx))
    dist[sy][sx] = 0
    while q:
        nowy, nowx = q.popleft()
        if nowy == -1:
            for yy, xx in d[chr(ord("a") + nowx)]:
                if dist[yy][xx] != INF:
                    continue
                dist[yy][xx] = dist2[nowx]
                q.appendleft((yy, xx))
            d[chr(ord("a") + nowx)] = []
            continue
        if G[nowy][nowx].islower():
            nexti = ord(G[nowy][nowx]) - ord("a")
            if dist2[nexti] == INF:
                q.append((-1, nexti))
                dist2[nexti] = dist[nowy][nowx] + 1
        for dx, dy in [(0, 1), (1, 0), (-1, 0), (0, -1)]:
            nexty = nowy + dy
            nextx = nowx + dx
            if nexty < 0 or nextx < 0 or nexty >= H or nextx >= W or dist[nexty][nextx] != INF or G[nexty][nextx] == "#":
                continue
            q.append((nexty, nextx))
            dist[nexty][nextx] = dist[nowy][nowx] + 1
    print(-1 if dist[gy][gx] == INF else dist[gy][gx])
    return

    

if __name__ == '__main__':
    main()
