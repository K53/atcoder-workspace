#!/usr/bin/env python3
import sys


def solve(M: int, K: int):
    print(0 ^ 1)
    print(0 ^ 1 ^ 2)
    print(0 ^ 1 ^ 2 ^ 3)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6 ^ 7)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6 ^ 7 ^ 8)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6 ^ 7 ^ 8 ^ 9)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6 ^ 7 ^ 8 ^ 9 ^ 10)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6 ^ 7 ^ 8 ^ 9 ^ 10 ^ 11)
    print(0 ^ 1 ^ 2 ^ 3 ^ 4 ^ 5 ^ 6 ^ 7 ^ 8 ^ 9 ^ 10 ^ 11 ^ 12)
    if K != 0:
        print(-1)
        return
    ans = []
    for i in range(2 ** M):
        ans.append(i)
        ans.append(i)
    print(*ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    M = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(M, K)

if __name__ == '__main__':
    main()
