#!/usr/bin/env python3
import sys
from collections import deque

def solve(S: str):
    d = deque()
    right = True
    for ss in S:
        if ss == "R":
            right ^= True
        else:
            if right:
                if len(d) != 0 and d[-1] == ss:
                    d.pop()
                else:
                    d.append(ss)
            else:
                if len(d) != 0 and d[0] == ss:
                    d.popleft()
                else:
                    d.appendleft(ss)
    l = list(d)
    if right:
        print(*l, sep='')       
    else:    
        print(*l[::-1], sep='')
    return


# Generated by 2.2.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
