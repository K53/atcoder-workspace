#!/usr/bin/env python3
import sys


def solve(N: int, x: "List[int]", y: "List[int]"):
    l = [(xx, yy) for xx, yy in zip(x, y)]
    l.sort()
    ans = 0
    for i in range(N - 1):
        for j in range(i + 1, N):
            x1, y1 = l[i]
            x2, y2 = l[j]
            if -(x2 - x1) <= y2 - y1 <= x2 - x1:
                ans += 1
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    x = [int()] * (N)  # type: "List[int]"
    y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        x[i] = int(next(tokens))
        y[i] = int(next(tokens))
    solve(N, x, y)

if __name__ == '__main__':
    main()
