#!/usr/bin/env python3
import sys


def solve(N: int):
    # True ------ ok | ng ---- False
    def is_ok(a: int, b: int):
        return a ** 3 + (a ** 2 * b) + (a * b ** 2) + b ** 3 >= N

    def binSearch(a: int, ng: int, ok: int):
        # print(ok, ng)              # はじめの2値の状態
        while abs(ok - ng) > 1:     # 終了条件（差が1となり境界を見つけた時)
            mid = (ok + ng) // 2
            # print("target > ", mid)
            result = is_ok(a, mid)
            # print(result)
            if result:
                ok = mid            # midが条件を満たすならmidまではokなのでokの方を真ん中まで持っていく
            else:
                ng = mid            # midが条件を満たさないならmidまではngなのでngの方を真ん中まで持っていく
            # print(ok, ng)          # 半分に切り分ける毎の2値の状態
        return ok    # 関数呼び出し時の引数のngは絶対評価されないのでngに書く値が答えになりうるならその数マイナス1を指定する。
    ans = 10 ** 18
    for a in range(10 ** 6):
        bb = binSearch(a, -1, 10 ** 6 + 1)
        ans = min(ans, a ** 3 + (a ** 2 * bb) + (a * bb ** 2) + bb ** 3)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
