#!/usr/bin/env python3
import sys

def solve(N: int, K: int, a: "List[int]"):
    dp = [2] + [0] * K
    for i in range(1, K + 1):
        for aa in a:
            if i - aa < 0 or dp[i - aa] == 1:
                dp[i] = 2
            if dp[i - aa] == 2:
                dp[i] = 1
                break
    print("First" if dp[-1] == 1 else "Second")
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, a)

if __name__ == '__main__':
    main()
