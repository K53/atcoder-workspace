#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    l = [0] * (2 * 10 ** 5 + 1)
    for aa in A:
        l[aa] += 1
    # print(l[:10])
    total = N * (N - 1) * (N - 2) // 6
    d = 0
    for ll in l:
        if ll == 2:
            d += N - 2
        elif ll > 2:
            d += (ll * (ll - 1) * (ll - 2) // 6) + ((ll * (ll - 1) // 2) * (N - ll))
    print(total - d)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
