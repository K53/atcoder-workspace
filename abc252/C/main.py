#!/usr/bin/env python3
import sys
from collections import defaultdict
MOD = 10  # type: int


def solve(N: int, S: "List[str]"):
    ans = 10 ** 16
    for i in range(10):
        target = str(i)
        ts = defaultdict(int)
        for r in range(N):
            ts[S[r].index(target)] += 1
        l = [k + (v - 1) * 10 for k, v in ts.items()]
        ans = min(ans, max(l))
    print(ans)
            
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, S)

if __name__ == '__main__':
    main()
