#!/usr/bin/env python3
import sys


def solve(H: int, W: int, A: "List[List[int]]"):
    ans = []
    for i in range(H):
        l = []
        for j in range(W):
            if A[i][j] == 0:
                l.append(".")
            else:
                l.append(chr(A[i][j] + ord("A") - 1))
        ans.append("".join(l))
    print(*ans, sep="\n")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    A = [[int(next(tokens)) for _ in range(W)] for _ in range(H)]  # type: "List[List[int]]"
    solve(H, W, A)

if __name__ == '__main__':
    main()
