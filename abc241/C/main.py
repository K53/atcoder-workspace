#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, S: "List[str]"):
    for xx in range(N):
        for yy in range(N):
            if 0 <= xx + 5 < N and 0 <= yy < N:
                yoko = 0
                for i in range(6):
                    if S[yy][xx + i] == ".":
                        yoko += 1
                if yoko <= 2:
                    print(YES)
                    return
            if 0 <= xx < N and 0 <= yy + 5 < N:
                tate = 0
                for i in range(6):
                    if S[yy + i][xx] == ".":
                        tate += 1
                if tate <= 2:
                    print(YES)
                    return
            if 0 <= xx + 5 < N and 0 <= yy + 5 < N:
                nanamef = 0
                for i in range(6):
                    if S[yy + i][xx + i] == ".":
                        nanamef += 1
                if nanamef <= 2:
                    print(YES)
                    return
            if 0 <= xx - 5 < N and 0 <= yy + 5 < N:
                nanameb = 0
                for i in range(6):
                    if S[yy + i][xx - i] == ".":
                        nanameb += 1
                if nanameb <= 2:
                    print(YES)
                    return
    print(NO)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, S)

if __name__ == '__main__':
    main()
