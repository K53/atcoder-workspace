#!/usr/bin/env python3
import sys
import string

def solve(X: str, N: int, S: "List[str]"):
    d = dict()
    for abc, xxx in zip(string.ascii_lowercase, X):
        d[xxx] = abc
    ans = []
    for ss in S:
        st = []
        for c in ss:
            st.append(d[c])
        ans.append(("".join(st), ss))
    ans.sort()
    for _, a in ans:
        print(a)
    return


# Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = next(tokens)  # type: str
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(X, N, S)

if __name__ == '__main__':
    main()
