#!/usr/bin/env python3
import sys


def solve(X: str, N: int, S: "List[str]"):
    # X = "bacdefghijklmnopqrstuvwxzy"
    # N = 3
    # S = ["z", "aa", "ab"]
    d = dict()
    for i in range(26):
        d[X[i]] = i
    l = []
    for name in S:
        num = 0
        cut = 10
        for ss in list(name):
            # print(ss)
            # print(d[ss] * (26 ** cut))
            # print("--")
            num += d[ss] * (26 ** cut)
            cut -= 1
            # print(" ")
        l.append((num, name))
    l.sort()
    # print(l)
    for i in range(N):
        print(l[i][1])
    return


# Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = next(tokens)  # type: str
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(X, N, S)

if __name__ == '__main__':
    main()
