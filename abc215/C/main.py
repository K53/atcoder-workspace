#!/usr/bin/env python3
import sys


def fact(x):
    if x == 0:
        return 1
    else:
        return x * fact(x - 1)

def func(l):
    all = 0
    bunbo = 1
    for k in range(len(l)):
        all += l[k][1]
        bunbo *= fact(l[k][1])
    bunsi = fact(all)
    return bunsi // bunbo

    

def solve(S: str, K: int):
    S = "aaba"
    d = {}
    for i in S:
        d[i] = (S.count(i))
    l = []
    for k, v in d.items():
        l.append([k, v])
    l.sort()
    print(l)

    print(func(l))
    import copy
    for i in range(len(l)):
        print(l[i])
        ll = copy.deepcopy(l)
        for j in range(len(l)):
            if l[i][0] == ll[j][0]:
                ll[j][1] -= 1
                break
        print(func(ll))
        ll[j][1] += 1

        

   

    return


# Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    K = int(next(tokens))  # type: int
    solve(S, K)

if __name__ == '__main__':
    main()
