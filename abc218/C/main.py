#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str

def solve(N: int, S: "List[str]", T: "List[str]"):
    ss = set()
    tt = set()
    for i in range(N):
        for j in range(N):
            if S[i][j] == "#":
                ss.add((i, j))
            if T[i][j] == "#":
                tt.add((i, j))
    for _ in range(4):
        minXs, minYs = min(ss)
        minXt, minYt = min(tt)
        if set((x - minXs, y - minYs) for x, y in ss) == set((x - minXt, y - minYt) for x, y in tt):
            print(YES)
            return
        tt = set((y, -x) for x, y in tt)
    print(NO)
    return


# Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    T = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, S, T)

if __name__ == '__main__':
    main()
