#!/usr/bin/env python3
import sys


def solve(N: int, K: int, A: "List[int]"):
    l = [0] * 200000
    for num in A:
        l[num] += 1
    l.sort()
    t = 0
    for num in l:
        if num != 0:
            t += 1
    l = l[-t:]
    if t <= K:
        print(0)
        return
    print(sum(l[:(t - K)]))
    return

# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, A)

if __name__ == '__main__':
    main()
