#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    l = []
    for i in range(N):
        l.append(A[i] * 3)
    l *= 3
    # print(l)
    m = 0
    for i in range(N, 2 * N):
        for j in range(N, 2 * N):
            for dx in [-1, 0, 1]:
                for dy in [-1, 0, 1]:
                    if dy == dx == 0:
                        continue
                    ans = ""
                    for num in range(N):
                        ans += l[j + dy * num][i + dx * num]
                    m = max(m, int(ans))
    print(m)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [next(tokens) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
