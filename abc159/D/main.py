#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    kind = [0] * (2 * 10 ** 5 + 1)
    for aa in A:
        kind[aa] += 1
    total = 0
    for k in kind:
        if k > 1:
            total += k * (k - 1) // 2
    for k in A:
        print(total - (kind[k] - 1))
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
