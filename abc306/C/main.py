#!/usr/bin/env python3
import sys
from collections import defaultdict

def solve(N: int, A: "List[int]"):
    d = defaultdict(list)
    for i in range(N * 3):
        d[A[i]].append(i + 1)
    l = [(v[1], k) for k, v in d.items()]
    l.sort()
    ans = []
    for i in range(N):
        ans.append(l[i][1])
    print(*ans)
        
        

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(3 * N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
