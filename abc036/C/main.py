#!/usr/bin/env python3
import sys


def solve(N: int, a: "List[int]"):
    import copy
    d = {val : i for i, val in enumerate(sorted(list(set(copy.deepcopy(a)))))}
    for aa in a:
        print(d[aa])
    return
# def solve(N: int, a: "List[int]"):
#     import copy
#     l = list(set(copy.deepcopy(a)))
#     d = dict()
#     l.sort()
#     for i in range(len(l)):
#         d[l[i]] = i
#     for aa in a:
#         print(d[aa])
#     return


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, a)

if __name__ == '__main__':
    main()
