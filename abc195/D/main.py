#!/usr/bin/env python3
from copy import deepcopy
import heapq
INF = 10 ** 9

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    N, M, Q = map(int, input().split())
    materials = []  # [-${価値}, ${荷物の大きさ}, ${価値}]
    heapq.heapify(materials) 
    for _ in range(N):
        w, v = map(int, input().split())
        heapq.heappush(materials, (-v, w, v))
    X = list(map(int, input().split()))
    box = []    # [${箱の大きさ}, ${入っている価値}]
    for m in range(M):
        box.append([X[m], INF])

    for _ in range(Q):
        copiedBox = deepcopy(box)
        copiedMaterials = deepcopy(materials)
        L, R = map(lambda i: int(i) - 1, input().split())
        for i in range(L, R + 1):
            copiedBox[i][1] = 0
        copiedBox.sort()
        ans = 0
        for _ in range(N):
            _, w, v = heapq.heappop(copiedMaterials)
            for j in range(M):
                if copiedBox[j][1] != INF:
                    continue
                if copiedBox[j][0] >= w:
                    copiedBox[j][1] = v
                    ans += v
                    break
        print(ans)
             






if __name__ == '__main__':
    main()
