#!/usr/bin/env python3
import sys

def solve(N: int):
    A = str(N)
    B = [0] * 3
    total = 0
    for a in A:
        B[int(a) % 3] += 1
    
    sum = 3 * B[0] + B[1] + 2 * B[2]
    p = sum // 3
    q = sum % 3
    if p == 0:
        print(-1)
        return
    if q == 0:
        print(0)
        return
    if q == 1:
        if B[1] >= 1:
            if len(A) == 1:
                print(-1)
            else:
                print(1)
            return
        elif B[2] >= 2:
            if len(A) == 2:
                print(-1)
            else:
                print(2)
            return
    if q == 2:
        if B[2] >= 1:
            if len(A) == 1:
                print(-1)
            else:
                print(1)
            return
        elif B[1] >= 2:
            if len(A) == 2:
                print(-1)
            else:
                print(2)
            return
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
