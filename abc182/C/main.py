#!/usr/bin/env python3
import sys


def solve(N: int):
    S = str(N)
    nums = [0] * 3
    tot = 0
    for ss in S:
        n = int(ss)
        tot += n
        nums[n % 3] += 1
    # print(tot)
    # print(nums)
    if tot % 3 == 1:
        if nums[1] > 1 or (nums[1] == 1 and not (nums[0] == nums[2] == 0)):
            print(1)
        elif nums[2] > 2 or (nums[2] == 2 and not (nums[0] == nums[1] == 0)):
            print(2)
        else:
            print(-1)
        return
    elif tot % 3 == 2:
        if nums[2] > 1 or (nums[2] == 1 and not (nums[0] == nums[1] == 0)):
            print(1)
        elif nums[1] > 2 or (nums[1] == 2 and not (nums[0] == nums[2] == 0)):
            print(2)
        else:
            print(-1)
        return
    else:
        print(0)
        return

# Generated by 2.8.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
