#!/usr/bin/env python3
import sys
from telnetlib import GA
sys.setrecursionlimit(10 ** 9)

YES = "Yes"  # type: str
NO = "No"  # type: str

# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    H, W = map(int, input().split())
    G = []
    seen = []
    for _ in range(H):
        G.append(input())
        seen.append([False] * W)

    def dfs(now_y: int, now_x: int):
        # print(pre, now)
        seen[now_y][now_x] = 1
        # --- 子ノードを探索 -----------------------
        for dx, dy in [(0, 1), (0, -1), (1, 0), (-1, 0)]:
            next_y = now_y + dy
            next_x = now_x + dx
            if next_x < 0 or next_y < 0 or next_x >= W or next_y >= H or G[next_y][next_x] == "#" or seen[next_y][next_x]:
                continue
            # [1]
            # この領域は新たなノードnextに移動する変を通過する時のコード @edge
            dfs(next_y, next_x)
            # [4]
            # この領域は親ノードpreに帰る返を通過する時のコード @edge
        # [3]
        # この領域は親ノードpreに帰るために現在のノードnowを出発する時にのみ通過するエリア @node
        return

    for hh in range(H):
        for ww in range(W):
            if G[hh][ww] == "s":
                sh = hh
                sw = ww
            if G[hh][ww] == "g": 
                gh = hh
                gw = ww

    dfs(sh, sw) 
    print(YES if seen[gh][gw] else NO)

if __name__ == '__main__':
    main()
