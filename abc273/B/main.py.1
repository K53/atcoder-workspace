#!/usr/bin/env python3
import sys


def solve(X: int, K: int):
    for i in range(K):
        if i + 1 > len(str(X)):
            break
        S = str(X)
        if int(S[-(i + 1)]) >= 5:
            ss = S[:-(i + 1)] + "0" * (i + 1)
            X = int(ss)
            X +=  10 ** (i + 1)
            # print(X)
        else:
            ss = S[:-(i + 1)] + "0" * (i + 1)
            X = int(ss)
            # print(X)
    print(X)


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(X, K)

if __name__ == '__main__':
    main()
