#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, M: int, K: int):
    dp = [[0] * (K + 1) for _ in range(N)]
    for mm in range(1, M + 1):
        dp[0][mm] = 1
    # dp[i][k] := i人目の子供まで配り終えて、残りがk個である組み合わせ
    for i in range(N - 1):
        for kk in range(1, K + 1):
            for mm in range(1, M + 1):
                if kk + mm > K:
                    continue
                dp[i + 1][kk + mm] += dp[i][kk]
                dp[i + 1][kk + mm] %= MOD
    # print(dp)
    print(sum(dp[-1]) % MOD)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, M, K)

if __name__ == '__main__':
    main()
