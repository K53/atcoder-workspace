#!/usr/bin/env python3
import sys
from itertools import groupby
from collections import deque
def runLengthEncode(S: str) -> "List[tuple(str, int)]":
    grouped = groupby(S)
    res = []
    for k, v in grouped:
        res.append((k, int(len(list(v)))))
    return res


def solve(S: str):
    l = deque(runLengthEncode(S))
    # print(l)
    ans = 0
    cur_col, cur_num = l.popleft()
    while len(l) > 0:
        next_col, next_num = l.popleft()
        if cur_col == next_col:
            cur_num += next_num
            continue
        else:
            if cur_num <= next_num:
                cur_col = next_col
                cur_num = next_num - cur_num
                ans += next_num - cur_num
            else:
                cur_num -= next_num
                ans += next_num
    print(ans * 2)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
