#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int

def solve(S: str):
    l = []
    for ss in S:
        if ss in set("chokudai"):
            l.append(ss)
    if set(l) != set("chokudai"):
        print(0)
        return
    dp = []
    T = "chokudai"
    # print(l)
    for i in range(len(T)):
        dp.append([0] * len(l))
    if l[0] == T[0]:
        dp[0][0] = 1
    else:
        dp[0][0] = 0
    for ss in range(1, len(l)):
        dp[0][ss] = dp[0][ss - 1] + 1 if l[ss] == T[0] else dp[0][ss - 1]

    for tt in range(1, len(T)):
        for ss in range(tt, len(l)):
            if l[ss] == T[tt]:
                dp[tt][ss] = dp[tt - 1][ss] + dp[tt][ss - 1]
            else:
                dp[tt][ss] = dp[tt][ss - 1]
    # for i in range(len(T)):
    #     print(dp[i])
    print(dp[len(T) - 1][len(l) - 1] % MOD)
                
                    
    





    
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
