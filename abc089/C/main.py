#!/usr/bin/env python3
import sys


def solve(N: int, S: "List[str]"):
    d = {
        "M": 0,
        "A": 0,
        "R": 0,
        "C": 0,
        "H": 0
    }
    for name in S:
        if name[0] in "MARCH":
            d[name[0]] += 1
    l = [i for i in d.values()]
    ans = 0
    for i in range(3):
        for j in range(i + 1, 4):
            for k in range(j + 1, 5):
                # print(l[i], l[j], l[k])
                ans += l[i] * l[j] * l[k]
    print(ans)



        
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, S)

if __name__ == '__main__':
    main()
