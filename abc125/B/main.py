#!/usr/bin/env python3
import sys

def solve(N: int, V: "List[int]", C: "List[int]"):
    ans = 0
    for i in range(2 ** N):
        y = 0
        x = 0
        for b in range(N):
            if (i >> b) & 1:
                y += C[b]
                x += V[b]
        ans = max(ans, x - y)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    V = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    C = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, V, C)

if __name__ == '__main__':
    main()
