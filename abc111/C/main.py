#!/usr/bin/env python3
import sys


def solve(n: int, v: "List[int]"):
    eval = [(0, i) for i in range(10 ** 5 + 1)]
    odd = [(0, i) for i in range(10 ** 5 + 1)]
    for i in range(n):
        if i % 2 == 0:
            num, _ = eval[v[i]]
            eval[v[i]] = (num + 1, v[i])
        else:
            num, _ = odd[v[i]]
            odd[v[i]] = (num + 1, v[i])
    eval.sort()
    odd.sort()
    # print(eval[-2], eval[-1])
    # print(odd[-2], odd[-1])
    if eval[-1][1] != odd[-1][1]:
        print(n // 2 - eval[-1][0] + n // 2 - odd[-1][0])
    else:
        if eval[-2][0] >= odd[-2][0]:
            print(n // 2 - eval[-2][0] + n // 2 - odd[-1][0])
        else:
            print(n // 2 - eval[-1][0] + n // 2 - odd[-2][0])
    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    n = int(next(tokens))  # type: int
    v = [int(next(tokens)) for _ in range(n)]  # type: "List[int]"
    solve(n, v)

if __name__ == '__main__':
    main()
