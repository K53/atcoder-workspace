#!/usr/bin/env python3
import sys


def solve(B: int, C: int):
    ma = B + (C - 1) // 2
    mb = B - C // 2
    na = -B + C // 2
    nb = -B - (C - 1) // 2

    if C == 0:
        print(1)
        return
    if C == 1:
        print(2)
        return  
    # print(ma)
    # print(mb)
    # print(na)
    # print(nb)
    if B > 0:
        if mb > na:
            print(abs(ma - mb + 1) + abs(na - nb + 1) - 1)
        else:
            if C % 2 == 0:
                print(abs(ma - nb + 1))
            else:
                print(abs(ma - nb + 1) - 1)
    else:
        if mb > na:
            print(abs(ma - mb + 1) + abs(na - nb + 1) - 1)
        else:
            if C % 2 == 0:
                print(abs(na - mb + 1) - 1)
            else:
                print(abs(na - mb + 1))
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    solve(B, C)

if __name__ == '__main__':
    main()
