#!/usr/bin/env python3
import sys
from collections import deque

def solve(n: int, a: "List[int]"):
    inv = False
    b = deque()
    for aa in a:
        if not inv:
            b.append(aa)
            inv ^= 1
        else:
            b.appendleft(aa)
            inv ^= 1
    b = list(b)
    if not inv:
        print(*b, sep=" ")
    else:
        print(*b[::-1], sep=" ")
    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    n = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(n)]  # type: "List[int]"
    solve(n, a)

if __name__ == '__main__':
    main()
