#!/usr/bin/env python3
import sys


def solve(N: int, K: int):
    ans = [(0, i) for i in range(1, N)]
    maxK = (N - 1) * (N - 2) // 2
    if maxK < K:
        print(-1)
        return
    for fr in range(1, N - 1):
        for to in range(fr + 1, N - 1 + 1):
            if maxK == K:
                break
            ans.append((fr, to))
            maxK -= 1
        else:
            continue
        break
    print(len(ans))
    for f, t in ans:
        print(f + 1, t + 1)
    return
    
# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
