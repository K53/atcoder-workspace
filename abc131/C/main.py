#!/usr/bin/env python3
import sys
import math

def solve(A: int, B: int, C: int, D: int):
    cd = C * D // math.gcd(C, D)
    dividableCinB = B // C
    dividableDinB = B // D
    dividableCnDinB = B // cd
    b = B - dividableCinB - dividableDinB + dividableCnDinB
    # print(dividableCinB)
    # print(dividableDinB)
    # print(dividableCnDinB)
    dividableCinA = (A-1) // C
    dividableDinA = (A-1) // D
    dividableCnDinA = (A-1) // cd
    a = A - 1 - dividableCinA - dividableDinA + dividableCnDinA
    # print(dividableCinA)
    # print(dividableDinA)
    # print(dividableCnDinA)
    print(b - a)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(A, B, C, D)

if __name__ == '__main__':
    main()
