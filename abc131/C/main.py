#!/usr/bin/env python3
import sys
import math

def solve(A: int, B: int, C: int, D: int):
    num_C = (A - 1) // C
    num_D = (A - 1) // D
    num_C_D = (A - 1) // (C * D // math.gcd(C, D))
    p = (A - 1) - num_C - num_D + num_C_D
    # print((A - 1), num_C, num_D, num_C_D)
    num_C = B // C
    num_D = B // D
    num_C_D = B // (C * D // math.gcd(C, D))
    q = B - num_C - num_D + num_C_D
    print(q - p)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(A, B, C, D)

if __name__ == '__main__':
    main()
