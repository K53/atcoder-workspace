#!/usr/bin/env python3
import sys
import math

def solve(A: int, B: int, C: int, D: int):
    cd = C * D // math.gcd(C, D)
    ac = (A - 1) // C
    ad = (A - 1) // D
    acd = (A - 1) // cd
    nacd = (A - 1) - ac - ad + acd
    bc = B // C
    bd = B // D
    bcd = B // cd
    nbcd = B - bc - bd + bcd
    print(nbcd - nacd)
    return



# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    solve(A, B, C, D)

if __name__ == '__main__':
    main()
