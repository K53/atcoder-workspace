#!/usr/bin/env python3
import sys
INF = 10 ** 16

def solve(N: int, K: int, C: int, S: str):
    l = set()
    pre = - INF
    for i in range(N):
        if S[i] == "x":
            continue
        if i - pre > C:
            pre = i
            l.add(i)

    r = set()
    pre = INF
    for i in reversed(range(N)):
        if S[i] == "x":
            continue
        if pre - i > C:
            pre = i
            r.add(i)
    lr = l & r
    if len(l) > K or len(r) > K :
        return
    for i in lr:
        print(i + 1)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, K, C, S)

if __name__ == '__main__':
    main()
