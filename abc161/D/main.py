#!/usr/bin/env python3
import sys
from collections import deque

def solve(K: int):
    q = deque([str(i) for i in range(1, 10)])
    for i in range(K):
        now = q.popleft()
        if now[-1] == "0":
            q.append(now + "0")
            q.append(now + "1")
        elif now[-1] == "9":
            q.append(now + "8")
            q.append(now + "9")
        else:
            l = int(now[-1])
            q.append(now + str(l - 1))
            q.append(now + now[-1])
            q.append(now + str(l + 1))
    print(now)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    K = int(next(tokens))  # type: int
    solve(K)

if __name__ == '__main__':
    main()
