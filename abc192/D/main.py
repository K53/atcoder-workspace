#!/usr/bin/env python3
import sys

def Base_n_to_10(X,n):
    out = 0
    for i in range(1,len(str(X))+1):
        out += int(X[-i])*(n**(i-1))
    return out#int out

def solve(X: str, M: int):
    if len(X) == 1:
        if int(X) <= M:
            print(1)
        else:
            print(0)
        return
    x = int(X)
    l = max(list(map(int, X))) + 1
    r = M
    while True:
        c = (l + r) // 2
        if Base_n_to_10(X, c) <= M:
            l = c
        else:
            r = c
        if l == c:
            break
    print(l - max(list(map(int, X))))
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = next(tokens)  # type: str
    M = int(next(tokens))  # type: int
    solve(X, M)

if __name__ == '__main__':
    main()
