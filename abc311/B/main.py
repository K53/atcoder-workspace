#!/usr/bin/env python3
import sys
from itertools import groupby
def runLengthEncode(S: str) -> "List[tuple(str, int)]":
    grouped = groupby(S)
    res = []
    for k, v in grouped:
        res.append((k, int(len(list(v)))))
    return res

def solve(N: int, D: int, S: "List[str]"):
    p = [1] * D
    for day in range(D):
        for i in range(N):
            if S[i][day] == "x":
                p[day] = 0
                break
    l = runLengthEncode(p)
    ans = 0
    for ll in l:
        if ll[0] == 0:
            continue
        ans = max(ans, ll[1])
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, D, S)

if __name__ == '__main__':
    main()
