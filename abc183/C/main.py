#!/usr/bin/env python3
import sys
from itertools import permutations

def solve(N: int, K: int, T: "List[List[int]]"):
    ans = 0
    for p in permutations(range(N)):
        if p[0] != 0:
            continue
        p = list(p)
        p.append(p[0])
        tot = 0
        for i in range(N):
            tot += T[p[i]][p[i + 1]]
        if tot == K:
            ans += 1
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    T = [[int(next(tokens)) for _ in range(N)] for _ in range(N)]  # type: "List[List[int]]"
    solve(N, K, T)

if __name__ == '__main__':
    main()
