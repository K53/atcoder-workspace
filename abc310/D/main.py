#!/usr/bin/env python3
from collections import defaultdict
from itertools import combinations

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    N, T, M = map(int, input().split())
    # rel = []
    bad = [set() for _ in range(N)]
    for i in range(M):
        aa, bb = map(int, input().split())
        bad[aa - 1].add(bb - 1)
        bad[bb - 1].add(aa - 1)
    ans = 0


    pat = combinations(range(N), T)
    for l in pat:
        restNs = []
        for i in range(N):
            if i not in l:
                restNs.append(i)
        def dfs(d, depth):
            nonlocal ans
            if depth == len(restNs):
                for k, b in enumerate(bad):
                    if d[k] == d[b]:
                        return
                ans += 1
                return
            for person, dd in d.items():
                if person in bad[restNs[depth]]:
                    continue
                if person < restNs[depth]:
                    continue
                dd.add(restNs[depth])
                dfs(d, depth + 1)
                dd.remove(restNs[depth])
            
        d = {}
        for ll in l:
            d[ll] = set()


        dfs(d, 0)

        print(ans)





if __name__ == '__main__':
    main()
