#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    odd = []
    even = []
    for aa in A:
        if aa % 2 == 0:
            even.append(aa)
        else:
            odd.append(aa)
    odd.sort(reverse=True)
    even.sort(reverse=True)
    # print(odd)
    # print(even)
    ans = -1
    if len(odd) >= 2:
        ans = odd[0] + odd[1]
    if len(even) >= 2:
        ans = max(even[0] + even[1], ans)
    print(ans)
    
    
            

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
