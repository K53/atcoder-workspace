#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int

# def modpow(n: int, a: int, mod: int = MOD) -> int:
#     res = 1
#     while a > 0:
#         if a & 1:
#             res = res * n % mod
#         n = n * n % mod
#         a >>= 1
#     return res

def solve(N: int, K: int, M: int):
    if M % MOD == 0:
        print(0)
        return
    # M ^ (K ^ N) % MOD
    # M ^ (MOD - 1) = 1
    # -> M ^ (K ^ N % (MOD - 1))
    # ans = pow((M % MOD), pow(K % (MOD - 1), N)) % MOD
    ans = pow((M % MOD), pow((K % (MOD - 1)), N, (MOD - 1)), MOD)
    print(ans)
    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    solve(N, K, M)

if __name__ == '__main__':
    main()
