#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, K: int, P: "List[List[int]]"):
    import bisect
    # S = [(sum(P[i]), i) for i in range(N)]
    S = [sum(P[i]) for i in range(N)]
    C = [sum(P[i]) for i in range(N)]
    C.sort()
    # S.sort()
    # print(C)
    for i in range(N):
        num = S[i] + 300
        a = bisect.bisect_right(C, num)
        # print(a)
        if N - a <= K - 1:
            print(YES)
        else:
            print(NO)

    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    P = [[int(next(tokens)) for _ in range(3)] for _ in range(N)]  # type: "List[List[int]]"
    solve(N, K, P)

if __name__ == '__main__':
    main()
