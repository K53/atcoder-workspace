#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    for i in range(N):
        A[i] -= i
    B = sorted(A)
    p, q = divmod(N, 2)
    c = 0
    if q == 1:
        c = B[p]
    else:
        c = (B[p - 1] + B[p]) / 2
    ans = 0
    for aa in A:
        ans += abs(aa - c)
    print(int(ans))
    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
