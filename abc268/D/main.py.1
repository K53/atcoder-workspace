#!/usr/bin/env python3
import sys
from itertools import permutations

def solve(N: int, M: int, S: "List[str]", T: "List[str]"):
    p = permutations(S)
    ls = 0
    for ss in S:
        ls += len(ss)
    num_ = 16 - (ls + N - 1)
    for pp in p:
        print(pp)
        
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    T = [next(tokens) for _ in range(M)]  # type: "List[str]"
    solve(N, M, S, T)

if __name__ == '__main__':
    main()
