#!/usr/bin/env python3
import sys
INF = 10 ** 9
MOD = 2019  # type: int

def solve(L: int, R: int):
    if R - L == 1:
        print(L * R % MOD)
        return
    pl, ql = divmod(L, MOD)
    pr, qr = divmod(R, MOD)
    # print(pl, ql)
    # print(pr, qr)
    if pl == pr:
        m = INF
        for i in range(ql, qr):
            for j in range(i + 1, qr + 1):
                m = min(m, (i * j) % MOD)
        print(m)
    else:
        print(0)
        return




# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    L = int(next(tokens))  # type: int
    R = int(next(tokens))  # type: int
    solve(L, R)

if __name__ == '__main__':
    main()
