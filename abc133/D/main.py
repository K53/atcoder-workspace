#!/usr/bin/env python3
import sys

# a   b   c   d   e
# ^ - ^ - ^ - ^ - ^ -
#   3   8   7   5   5

# a + b             = 6
#     b + c         = 16
#         c + d     = 14
#             d + e = 10
# a +             e = 10

# total = 28

def solve(N: int, A: "List[int]"):
    sums = []
    total = 0
    ans = []
    for a in A:
        sums.append(a * 2)
        total += a * 2
    total //= 2
    n = total
    for i in range(1, N, 2):
        n -= sums[i]
    ans.append(n)
    for sum in sums:
        n = sum - n
        ans.append(n)
    print(*ans[:-1], sep=" ")


    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
