#!/usr/bin/env python3
import sys


def solve(N: int):
    S = str(N)
    L = len(S)
    dp = [[[0] * (L + 1) for _ in range(2)] for _ in range(L + 1)]
    dp[0][0][0] = 1

    for i in range(1, L + 1):
        for smaller in range(2):
            for j in range(L):
                maxNum = int(S[i - 1]) if smaller == 0 else 9
                for num in range(maxNum + 1):
                    dp[i][smaller or num < int(S[i - 1])][j + 1 if num == 1 else j] += dp[i - 1][smaller][j]
    ans = 0
    for i in range(L + 1):
        for smaller in range(2):
            ans += dp[-1][smaller][i] * i
    print(ans)
    return


# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)

if __name__ == '__main__':
    main()
