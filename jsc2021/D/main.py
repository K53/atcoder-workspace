#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int

# dp[i][j] := j番目までの累積和をP-1で割ったあまりがiになる個数。
# 最後に全体から引く

def solve(N: int, P: int):
    dp = []
    for i in range(P):
        dp.append([0] * N)
    
    for i in range(P - 1):
        dp[i][0] = 1
    print(1)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = int(next(tokens))  # type: int
    solve(N, P)

if __name__ == '__main__':
    main()
