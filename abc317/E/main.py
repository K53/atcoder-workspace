#!/usr/bin/env python3


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    H, W = map(int, input().split())
    G = []
    for hh in range(H):
        l = input()
        if "S" in l:
            ws = l.index("S")
            hs = hh
        if "G" in l:
            wg = l.index("G")
            wh = hh
        G.append(l)
    
    ob = set([">", "<", "^", "v", "#"])
    F1 = [[0 for _ in range(W)] for _ in range(H)]
    for hh in range(H):
        for ww in range(W):
            if G[hh][ww] == ">":
                F1[hh][ww] += 1
                continue
            if G[hh][ww] in ob:
                if ww + 1 < W:
                    F1[hh][ww + 1] -= 1

    for hh in range(H):
        for ww in range(1, W):
            F1[hh][ww] += F1[hh][ww - 1]

    F2 = [[0] * W for _ in range(H)]
    for hh in range(H):
        for ww in range(W):
            if G[hh][ww] == "<":
                F2[hh][ww] += 1
            if G[hh][ww] in ob:
                if ww - 1 >= 0:
                    F2[hh][ww - 1] -= 1

    for hh in range(H):
        for ww in reversed(range(W - 1)):
            F2[hh][ww] += F2[hh][ww + 1]
    
    


    allF = [[0] * W for _ in range(H)]
    for hh in range(H):
        for ww in range(W):
            if F1[hh][ww] == 1 or F2[hh][ww] == 1:
                allF[hh][ww] = 1
    
    
    for hh in range(H):
        print(F1)
        # print(allF[hh])







if __name__ == '__main__':
    main()
