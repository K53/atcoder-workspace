#!/usr/bin/env python3
import sys


def solve(N: int, M: int, S: "List[str]"):
    for i in range(N - 9 + 1):
        for j in range(M - 9 + 1):
            for dy in range(3):
                for dx in range(3):
                    if S[i + dy][j + dx] != "#":
                        break
                else:
                    continue
                break
            else:
                for dy in range(3):
                    for dx in range(3):
                        if S[i + 6 + dy][j + 6 + dx] != "#":
                            break
                    else:
                        continue
                    break
                else:
                    for dy in range(4):
                        for dx in range(4):
                            if dy < 3 and dx < 3:
                                continue
                            if S[i + dy][j + dx] != ".":
                                break
                        else:
                            continue
                        break
                    else:
                        for dy in range(4):
                            for dx in range(4):
                                if dy >= 1 and dx >= 1:
                                    continue
                                if S[i + 5 + dy][j + 5 + dx] != ".":
                                    # print("a", i + 5 + dy, i + 5 + dx)
                                    break
                            else:
                                continue
                            break
                        else:
                            print(i + 1, j + 1)
                        continue
                    continue
                continue
            continue
            


    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, M, S)

if __name__ == '__main__':
    main()
