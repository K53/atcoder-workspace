#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(S: str):
    N = len(S)
    if N % 2 == 1:
        print(0)
        return
    dp = [[0] * (N + 1) for _ in range(N + 1)]
    dp[0][0] = 1
    for i in range(N):
        for c in range(N + 1):
            if S[i] != "(" and 0 <= c - 1 < N + 1:
                dp[i + 1][c - 1] += dp[i][c]
                dp[i + 1][c - 1] %= MOD
            if S[i] != ")" and 0 <= c + 1 < N + 1:
                dp[i + 1][c + 1] += dp[i][c]
                dp[i + 1][c + 1] %= MOD
    print(dp[-1][0] % MOD)

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
