#!/usr/bin/env python3
import sys


def solve(N: int, A: int, B: int, S: str):
    ans = 10 ** 16
    for i in range(N):
        l = S[i:] + S[:i]
        # print(l)
        score = A * i
        for k in range(N // 2):
            if l[k] == l[-1-k]:
                continue
            score += B
        ans = min(ans, score)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, A, B, S)

if __name__ == '__main__':
    main()
