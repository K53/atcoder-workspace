#!/usr/bin/env python3
from itertools import combinations
import sys


def solve(N: int):
    binN = str(bin(N))[2:]
    # print(binN)
    k = binN.count("1")
    # print(k)
    for i in range(2 ** k):
        con = bin(i)[2:].zfill(k)
        idx = 0
        res = []
        for num in binN:
            if num == "1":
                res.append(con[idx])
                idx += 1
            else:
                res.append("0")
        # print(res)
        q = "".join(res)
        print(int(q, 2))

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    solve(X)

if __name__ == '__main__':
    main()
