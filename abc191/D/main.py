#!/usr/bin/env python3
import sys
import math

def solve(X: float, Y: float, R: float):
    c = 0
    for i in range(-3, 3):
        a = 2
        b = -2 * (X - i + Y)
        c = X ** 2 + i ** 2 - 2 * i * Y + Y ** 2 - R ** 2
        if (b ** 2 -4 * a * c) < 0:
            continue
        x1, x2 = (-1 * b - (b ** 2 -4 * a * c) ** 0.5) / 2 * a, (-1 * b + (b ** 2 -4 * a * c) ** 0.5) / 2 * a
        lx, rx = 0, 0
        # 整数か
        if x1 < 0:
            lx = -1 * (math.floor(-1 * x1))
            print(lx)
        else:
            lx = math.floor(x1)
            print(lx)
        if x2 < 0:
            rx = -1 * (math.floor(-1 * x2))
            print(rx)
        else:
            rx = math.floor(x2)
            print(rx)
        c += (abs(lx - rx) + 1)
    print(c)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = float(next(tokens))  # type: float
    Y = float(next(tokens))  # type: float
    R = float(next(tokens))  # type: float
    solve(X, Y, R)

if __name__ == '__main__':
    main()
