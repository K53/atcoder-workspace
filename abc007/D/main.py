#!/usr/bin/env python3
import sys


def f(s: int):
    t = str(s)
    N = len(t)
    # dp[i][isless] := 上からi桁まで考えた時、かつそれが制限より小さい(大きい)時の禁止されない数の数
    # isless = 0 :制限値ちょうど = s[i]以下しか使えない
    # isless = 1 : 制限値以下。何使ってもOK = 9以下すべて使える。 = 9以下しか使えない
    dp = [[0] * 2 for _ in range(N + 1)]
    dp[0][0] = 1
    for i in range(N):
        for isless in range(2):
            maxNum = ord(t[i]) - ord("0")
            for next in range(10):
                if next == 4 or next == 9:
                    continue
                if next > maxNum and isless == 0:
                    continue

                # 遷移
                # isless=1 → isless=1 にしか行かない。
                # isless=0 → 次の桁も上限ギリギリなら isless=0 に行ける。
                #          → そうでないなら isless=1に落ちる。
                if isless == 0 and next == maxNum:
                    next_isless = 0
                else:
                    next_isless = 1
                    
                dp[i + 1][next_isless] += dp[i][isless]
    return s - (dp[-1][0] + dp[-1][1])
def solve(A: int, B: int):
    print(f(B) - f(A - 1))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    solve(A, B)

if __name__ == '__main__':
    main()
