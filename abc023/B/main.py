#!/usr/bin/env python3
import sys


def solve(N: int, S: str):
    if N % 2 == 0:
        print(-1)
        return
    else:
        m = N // 2
        # print(m)
        t = "bac"
        u = "bca"
        for i in range(N // 2):
            if S[m - i] != t[i % 3]:
                # print("#", m + i)
                print(-1)
                return
            if S[m + i] != u[i % 3]:
                # print(">", m + i)
                print(-1)
                return
    print(N // 2)
    return

# 0123456789
# bcabcabcabcabcabcab
# 9876543210123456789

# Generated by 2.6.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
