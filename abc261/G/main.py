#!/usr/bin/env python3
import sys


def solve(S: str, T: str, K: int, C: "List[str]", A: "List[str]"):
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    T = next(tokens)  # type: str
    K = int(next(tokens))  # type: int
    C = [str()] * (K)  # type: "List[str]"
    A = [str()] * (K)  # type: "List[str]"
    for i in range(K):
        C[i] = next(tokens)
        A[i] = next(tokens)
    solve(S, T, K, C, A)

if __name__ == '__main__':
    main()
