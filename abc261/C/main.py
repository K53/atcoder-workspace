#!/usr/bin/env python3
from collections import defaultdict
import sys

def solve(N: int, S: "List[str]"):
    d = defaultdict(int)
    for ss in S:
        if d[ss] == 0:
            print(ss)
            d[ss] += 1
        else:
            print(ss + "(" + str(d[ss]) + ")")
            d[ss] += 1
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(N)]  # type: "List[str]"
    solve(N, S)

if __name__ == '__main__':
    main()
