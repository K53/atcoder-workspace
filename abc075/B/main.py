#!/usr/bin/env python3
import sys


def solve(H: int, W: int, S: "List[str]"):
    ans = []
    for i in range(H):
        l = []
        for j in range(W):
            res = 0
            if S[i][j] == "#":
                l.append("#")
                continue
            for dy in  [-1, 0, 1]:
                for dx in [-1, 0, 1]:
                    if 0 <= i + dy < H and 0 <= j + dx < W:
                        if S[i + dy][j + dx] == "#":
                            res += 1
            l.append(str(res))
        ans.append(l)
    for i in range(H):
        print(*ans[i], sep="")
        
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    H = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(H)]  # type: "List[str]"
    solve(H, W, S)

if __name__ == '__main__':
    main()
