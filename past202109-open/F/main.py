#!/usr/bin/env python3
from collections import deque
import sys


def solve(N: int, S: str):
    if S.count("0") == 1:
        print(-1)
        return
    if S.count("0") == 0:
        print(*range(1, N + 1), sep=" ")
        return
    q = deque([])
    for i in range(N):
        if S[i] == "0":
            q.append(i + 1)
    q.append(q.popleft())
    ans = []
    for i in range(N):
        if S[i] == "0":
             ans.append(q.popleft())
        else:
            ans.append(i + 1)
    print(*ans, sep=" ")
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
