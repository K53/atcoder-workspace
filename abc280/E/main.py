#!/usr/bin/env python3
import sys
from itertools import accumulate

MOD = 998244353  # type: int


def solve(N: int, P: int):
    dp = [0 for i in range(N + 2)]
    dp[0] = 1
    for i in range(N):
        dp[i + 1] += dp[i] * (100 - P) * pow(100, MOD - 2, MOD)
        dp[i + 1] %= MOD
        dp[i + 2] += dp[i] * P * pow(100, MOD - 2, MOD)
        dp[i + 2] %= MOD
    # print(dp)
    ll = list(accumulate(dp[::-1]))
    print(ll[N] % MOD)

    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = int(next(tokens))  # type: int
    solve(N, P)

if __name__ == '__main__':
    main()
