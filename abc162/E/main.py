#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, K: int):
    dp = [0] * K
    for i in reversed(range(1, K + 1)):
        dp[i - 1] = pow(K // i, N, MOD)
        for j in range(i * 2, K + 1, i):
            dp[i - 1] -= dp[j - 1]
        dp[i - 1] %= MOD
    ans = 0
    for i in range(K):
        ans += dp[i] * (i + 1)
        ans %= MOD
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
