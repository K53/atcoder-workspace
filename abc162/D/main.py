#!/usr/bin/env python3
import sys
from collections import Counter

def solve(N: int, S: str):
    d = Counter(S)
    ans = 0
    for ss in S:
        tmp = 1
        for k in ["R", "G", "B"]:
            if k == ss:
                d[k] -= 1
            else:
                tmp *= d[k]
        ans += tmp   
    
    for i in range(N):
        for j in range(i + 1, N):
            if S[i] == S[j]:
                continue
            diff = j - i
            k = j + diff
            if k < N and S[i] != S[k] and S[j] != S[k]:
                ans -= 1
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
