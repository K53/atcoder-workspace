#!/usr/bin/env python3
import sys

def solve(N: int, S: str):
    rgb = [0] * 3
    for ss in S:
        if ss == "R":
            rgb[0] += 1
        elif ss == "G":
            rgb[1] += 1
        else:
            rgb[2] += 1
    t = rgb[0] * rgb[1] * rgb[2]
    for i in range(N - 2):
        for j in range(i + 1, N + 1):
            k = j + j - i
            if k < N:
                if set((S[i], S[j], S[k])) == set("RGB"):
                    t -= 1
    print(t)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = next(tokens)  # type: str
    solve(N, S)

if __name__ == '__main__':
    main()
