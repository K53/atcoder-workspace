#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, A: "List[int]", M: int, B: "List[int]", L: int, C: "List[int]", Q: int, X: "List[int]"):
    s = set()
    for aa in A:
        for bb in B:
            for cc in C:
                s.add(aa + bb + cc)
    for xx in X:
        if xx in s:
            print(YES)
        else:
            print(YES)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    M = int(next(tokens))  # type: int
    B = [int(next(tokens)) for _ in range(M)]  # type: "List[int]"
    L = int(next(tokens))  # type: int
    C = [int(next(tokens)) for _ in range(L)]  # type: "List[int]"
    Q = int(next(tokens))  # type: int
    X = [int(next(tokens)) for _ in range(Q)]  # type: "List[int]"
    solve(N, A, M, B, L, C, Q, X)

if __name__ == '__main__':
    main()
