#!/usr/bin/env python3
import sys


def solve(N: int, X: "List[int]", L: "List[int]"):
    a = [(xx + ll, xx - ll) for xx, ll in zip(X, L)]
    a.sort()
    ans = 0
    now = -((10 ** 9 + 1))
    # print(a)
    for r, l in a:
        if now <= l:
            now = r
            ans += 1
    print(ans)
    return


# Generated by 2.9.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    X = [int()] * (N)  # type: "List[int]"
    L = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        X[i] = int(next(tokens))
        L[i] = int(next(tokens))
    solve(N, X, L)

if __name__ == '__main__':
    main()
