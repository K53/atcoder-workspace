#!/usr/bin/env python3
import sys

# 1 1 0 0 0
#   ^
#   i----->

INF = 10 ** 16
def solve(N: int, A: "List[int]"):
    cur = [INF, A[0]] # まだ、すみ
    for i in range(1, N):
        next = [INF, INF]
        # まだiは選ばれていない → i,i+1 で選ぶしかない
        next[1] = min(next[1], cur[0] + A[i])
        # すでにiは選ばれてる。 → i,i+1 はどっちでもいい
        next[1] = min(next[1], cur[1] + A[i])
        next[0] = min(next[0], cur[1])
        cur = next
    ans = min(next)
    cur = [INF, A[-1]] # まだ、すみ
    for i in range(N - 1):
        next = [INF, INF]
        # まだiは選ばれていない → i,i+1 で選ぶしかない
        next[1] = min(next[1], cur[0] + A[i])
        # すでにiは選ばれてる。 → i,i+1 はどっちでもいい
        next[1] = min(next[1], cur[1] + A[i])
        next[0] = min(next[0], cur[1])
        cur = next
    ans = min(*next, ans)
    print(ans)
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
