#!/usr/bin/env python3
import sys


def solve(N: int, W: int, A: "List[int]"):
    s = set([aa for aa in A if aa <= W])
    for i in range(N - 1):
        for j in range(i + 1, N):
            num = A[i] + A[j]
            if num <= W:
                s.add(num)
        
    for i in range(N - 2):
        for j in range(i + 1, N - 1):
            for k in range(j + 1, N):
                num = A[i] + A[j] + A[k]
                if num <= W:
                    s.add(num)
    print(len(s))
    return


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    W = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, W, A)

if __name__ == '__main__':
    main()
