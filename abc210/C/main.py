#!/usr/bin/env python3
import sys

def solve(N: int, K: int, c: "List[int]"):
    # リストa (要素数N)
    # a[l:r]を考える。rはこの範囲に含まれない。
    # 例) a[0:3] → a[0]〜a[2]までの範囲
    from collections import defaultdict
    d = defaultdict(int)
    l = 0
    r = 0
    ans = 0
    for _ in range(N):
        while r < N and d[c[r]] == 0:
            d[c[r]] = 1
            r += 1
        ans = max(ans, r - l)
        if r < N:
            d[c[r]] = 0
            l += 1
    print(ans)
    return


# Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    c = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, c)

if __name__ == '__main__':
    main()
