#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(S: str):
    N = len(S)
    for al in range(N):
        if S[al] != "a":
            break
    invS = S[::-1]
    for ar in range(N):
        if invS[ar] != "a":
            break
    if al > ar:
        print(NO)
        return
    S = S[al:(N - ar)]
    # print(al, N - ar, S)
    if S == S[::-1]:
        print(YES)
    else:
        print(NO)
    return
    # # p, q = divmod(N, 2)
    # # if q == 1:
    # #     p += 1
    # left = 0
    # right = N - 1
    # while left < right:
            


# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
