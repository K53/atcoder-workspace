#!/usr/bin/env python3
from collections import defaultdict, deque
import sys

# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    input = sys.stdin.readline
    N, M = map(int, input().split())
    G = defaultdict(lambda: [[] for _ in range(N)])
    E = []

    for _ in range(M):
        aa, bb, cc = input().split()
        aa = int(aa) - 1
        bb = int(bb) - 1
        G[cc][aa].append(bb)
        G[cc][bb].append(aa)
        E.append((aa, bb))

    INF = 10 ** 9
    q = deque()
    dist = [[INF] * N for _ in range(N)]
    q.append((0, N - 1))
    dist[0][N - 1] = 0
    while q:
        now1, now2 = q.popleft()
        for graph in G.values():
            for next1 in graph[now1]:
                for next2 in graph[now2]:
                    if dist[next1][next2] != INF:
                        continue
                    q.append((next1, next2))
                    dist[next1][next2] = dist[now1][now2] + 2
    ans = INF
    for i in range(N):
        ans = min(ans, dist[i][i])
    for aa, bb in E:
        ans = min(ans, dist[aa][bb] + 1)
        ans = min(ans, dist[bb][aa] + 1)
    print(ans if ans != INF else -1)

if __name__ == '__main__':
    main()
