#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    ans = 2 ** 31
    for b in range(2 ** (N - 1)):
        res = 0
        tmp = A[0]
        for i in range(N - 1):
            if b >> i & 1:
                res ^= tmp
                tmp = A[i + 1]
            else:
                tmp |= A[i + 1]
        res ^= tmp
        tmp = 0
        ans = min(ans, res)
    print(ans)
    return




# Generated by 2.12.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
